'use strict';

/*-------------------------------------------------------------------------------------------------------------------*/

/*"BigInt" - это специальный числовой тип, который предоставляет возможность работать с целыми числами произвольной 
длины. Чтобы создать значение типа "BigInt", необходимо добавить "n" в конец числового литерала или вызвать функцию 
"BigInt()", которая создаст число типа "BigInt" из переданного аргумента. Аргументом может быть число, строка и 
другое.*/
let bigint01 = 1234567890123456789012345678901234567890n;
console.log(bigint01); // 1234567890123456789012345678901234567890n

let bigint02 = BigInt('1234567890123456789012345678901234567890');
console.log(bigint02); // 1234567890123456789012345678901234567890n

let bigint03 = BigInt(10); // то же самое, что и 10n
console.log(bigint03); // 10n

console.log('--------------------------------------');

/*-------------------------------------------------------------------------------------------------------------------*/

/*Операция деления возвращает округленный результат при работе с "BigInt".*/
console.log(4n / 3n); // 1n

/*В математических операциях мы не можем смешивать bigint и обычные числа.*/
// console.log(4n / 3); // Uncaught TypeError: can't convert BigInt to number

/*Конвертирование "BigInt" в число всегда происходит неявно и без генерации ошибок, но если значение "BigInt" слишком
велико и не подходит под тип "number", то дополнительные биты будут отброшены.*/
console.log(Number(1234567890123456789012345678901234567890n) + 2); // 1.2345678901234568e+39

/*К "BigInt" числам нельзя применить унарный оператор "+".*/
// console.log(+1n); // Uncaught TypeError: can't convert BigInt to number

console.log('--------------------------------------');

/*-------------------------------------------------------------------------------------------------------------------*/

/*Операции сравнения, такие как "<", ">", работают с "BigInt" и обычными числами как обычно.*/
console.log(2n > 1n); // true
console.log(2 > 1n); // true

/*Обычные и "BigInt" числа принадлежат к разным типам, они могут быть равны только при нестрогом сравнении.*/
console.log(1 == 1n); // true
console.log(1 === 1n); // false

console.log('--------------------------------------');

/*-------------------------------------------------------------------------------------------------------------------*/

/*В "if" или любом другом логическом операторе "BigInt" число ведет себя как обычное число.*/
if (0n) { console.log('a') };
if (1n) { console.log('b') }; // "b"

console.log( 1n || 2 ); // 1n
console.log( 0n || 2 ); // 2