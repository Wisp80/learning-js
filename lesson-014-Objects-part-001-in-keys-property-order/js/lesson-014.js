'use strict';

/*-------------------------------------------------------------------------------------------------------------*/

function makeUser(name, age) {
    return {
        name, // тоже самое что и "name: name,"
        age, // тоже самое что и "age: age,""
    };
};

console.log('--------------------------------------');

/*-------------------------------------------------------------------------------------------------------------*/

let user = { name: 'John', age: 30 };

/*При помощи оператора "in" можно проверять наличие свойств в объектах.*/
console.log('age' in user); // true
console.log('kek' in user); // false

console.log('--------------------------------------');

/*-------------------------------------------------------------------------------------------------------------*/

/*Нет никаких ограничений к именам свойств. Они могут быть в виде строк или символов. Все другие типы данных 
будут автоматически преобразованы к строке. Например, если использовать число 0 в качестве ключа, то оно 
превратится в строку "0"*/

let obj = {
    0: '123' // то же самое что и '0': '123'
};

console.log(obj['0']); // '123'
console.log(obj[0]); // '123'

console.log('--------------------------------------');

/*-------------------------------------------------------------------------------------------------------------*/

/*Свойства упорядочены особым образом: свойства с целочисленными ключами сортируются по возрастанию, остальные 
располагаются в порядке создания.*/

/*Термин "целочисленное свойство" означает строку, которая может быть преобразована в целое число и обратно без 
изменений.*/

let codes = {
    '49': '49a',
    a: 4,
    '41': '41a',
    '44': '44a',
    '1': '1a',
    f: 3,
    '2': 2
};

for (let code in codes) {
    console.log(code); // 1, 2, 41, 44, 49, a, f
    console.log(codes[code]); // '1a', 2, '41a', '44a', '49a', 4, 3
};