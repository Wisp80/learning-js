'use strict';

/*-------------------------------------------------------------------------------------------------------------*/

/*Поскольку массивы являются объектами, то для удаления элементов можно использовать "delete". При этом вместо 
удаленного элемента будет пустой слот и длинна массива не измениться, так как "delete" удаляет значение по ключу, а
не весь элемент.*/

let array1 = [1, 2, 3];
delete array1[1];
console.log(array1); // [1, <1 empty slot>, 3]
console.log(array1.length); // 3

/*Для добавления, удаления и изменения элементов в массиве лучше использовать метод "splice()". Первым параметром
указывается индекс элемента с которого должны начаться изменения. Вторым параметром указывается как много элементов
нужно удалить. Третьим и последующими параметрами указываются элементы, которые должны быть добавлены вместо 
удаленных. В конце работы будет возвращен массив из удаленных элементов. Допускается использование отрицательных
индексов.*/

let array2 = [1, 2, 3, 4, 5];
console.log(array2.splice(1, 1)); // [2]
console.log(array2); // [1, 3, 4, 5]

console.log(array2.splice(1, 2, 6, 7)); // [3, 4]
console.log(array2); // [1, 6, 7, 5 ]

console.log(array2.splice(2, 0, 8, 9)); // []
console.log(array2); // [1, 6, 8, 9, 7, 5]

console.log(array2.at(-1)); // 5
console.log(array2.at(array2.length - 1)); // 5

console.log(array2.splice(-1, 2, 10, 11)); // [5]
console.log(array2); // [1, 6, 8, 9, 7, 10, 11]

console.log('--------------------------------------');

/*-------------------------------------------------------------------------------------------------------------*/

/*Метод "slice()" возвращает новый массив с указанного начального индекса до указанного конечного индекса (конец не 
включительно) какого-то массива. Допускается использование отрицательных индексов.*/

let array3 = [1, 2, 3, 4, 5];
console.log(array3.slice(1, 3)); // [2, 3]
console.log(array3.slice(1)); // [2, 3, 4, 5]
console.log(array3.slice(-2)); // [4, 5]
console.log(array3.slice(-4, -2)); // [2, 3]
console.log(array3.slice()); // [1, 2, 3, 4, 5]

console.log('--------------------------------------');

/*-------------------------------------------------------------------------------------------------------------*/

/*Метод "concat()" возвращает новый массив, в который копирует данные из других массивов и дополнительные значения. В
качестве параметров могут приниматься как массивы, так и другие значения.*/

let array4 = [1, 2, 3, 4, 5];
let array5 = [9, 10]
console.log(array4.concat([6, 7])); // [1, 2, 3, 4, 5, 6, 7]
console.log(array4.concat([6, 7], 8)); // [1, 2, 3, 4, 5, 6, 7, 8]
console.log(array4.concat([6, 7], 8, array5)); // [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
console.log(array4.concat([6, 7], [], {a: 1})); // [1, 2, 3, 4, 5, 6, 7, { a: 1 }]

/*Если использовать массивоподобный объект со специальным свойством "Symbol.isConcatSpreadable", то он обработается
как массив.*/
let arrayLike1 = {
    0: 'a',
    1: 'b',
    [Symbol.isConcatSpreadable]: true,
    length: 2
};

console.log(array4.concat(arrayLike1)); // [1, 2, 3, 4, 5, 'a', 'b']

console.log('--------------------------------------');