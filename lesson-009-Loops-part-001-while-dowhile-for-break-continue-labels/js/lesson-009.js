'use strict';

/*-------------------------------------------------------------------------------------------------------------*/

let a = 0;

while (a < 3) {
    console.log(a); // 0 => 1 => 2
    a++;
};

console.log('a = ' + a); // 3

console.log('--------------------------------------');

/*Цикл "do...while" можно использовать, чтобы тело цикла выполнилось хотя бы один раз, даже если условие 
окажется ложным.*/

let b = 0;

do {
    console.log(b); // 0 => 1 => 2
    b++;
} while (b < 3);

console.log('b = ' + b); // 3

console.log('--------------------------------------');

/*-------------------------------------------------------------------------------------------------------------*/

/*Использование вместе с тернарным выражением таких директив, как "break/continue", вызовет ошибку.*/

// for (let i = 0; i < 3; i++) { (i < 5) ? console.log(i) : continue } // Error

/*-------------------------------------------------------------------------------------------------------------*/

/*При помощи меток, можно указывать из какого цикла нам выходить*/

outer: for (let i = 0; i < 3; i++) {
    inner: for (let j = 0; j < 3; j++) {
        if (i === 1 && j === 1) {
            break outer;
        };

        console.log(i + ' ' + j); // 0 0, 0 1, 0 2, 1 0
    };
};

console.log('--------------------------------------');

outerTwo: for (let i = 0; i < 3; i++) {
    innerTwo: for (let j = 0; j < 3; j++) {
        if (i === 1 && j === 1) {
            continue outerTwo;
        };

        console.log(i + ' ' + j); // 0 0, 0 1, 0 2, 1 0, 2 0, 2 1, 2 2
    };
};

/*-------------------------------------------------------------------------------------------------------------*/

/*Метки не дают возможности передавать управление в произвольное место кода. Директива "break" должна 
находиться внутри блока кода. Технически, подойдет любой маркированный блок кода.*/

// break label01; // Error

label01: {
    break label01;
};

label01: for (let i = 0; i < 3; i++) { console.log(i) };