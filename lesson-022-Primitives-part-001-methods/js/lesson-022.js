'use strict';

/*-------------------------------------------------------------------------------------------------------------*/

/*Существует 7 примитивных типов: string, number, boolean, symbol, null, undefined и bigint.*/

/*При работе со свойствами и методами у примитивов создается "объект-обертка", которые после завершения работы
удаляется. Такие объекты это: String, Number, Boolean, Symbol, BigInt.*/

/*В примере ниже происходит следующее:
1) В момент обращения к свойству строки, создается специальный объект, который знает значение этой строки и 
имеет метод "toUpperCase()".
2) Этот метод запускается и возвращает новую строку, которая будет отдана методу "console.log()".
3) Специальный объект удаляется, оставляя только примитив.*/
console.log('abc'.toUpperCase()); // 'ABC'

console.log('--------------------------------------');

/*-------------------------------------------------------------------------------------------------------------*/

/*Метод "toFixed(n)" округляет число до n знаков после запятой.*/
console.log(2.45345235.toFixed(3)); // 2.453

console.log('--------------------------------------');

/*-------------------------------------------------------------------------------------------------------------*/

/*Конструкторы String/Number/Boolean предназначены только для внутреннего пользования. Использовать их для 
создания примитивов не рекомендуется.*/

console.log(typeof 0); // number
console.log(typeof new Number(0)); // object
let number1 = new Number(0);
console.log(typeof number1);

if (0) {
    console.log(`I am 0`);
}

if (new Number(0)) {
    console.log(`You shouldn't see me`);
};

if (number1) {
    console.log(`You shouldn't see me`);
};

/*Хотя использование таких функций без new вполне допустимо в целях преобразования типов.*/

console.log(Number('123')); // 123
console.log(typeof Number('123')); // number

console.log('--------------------------------------');

/*-------------------------------------------------------------------------------------------------------------*/

/*null и undefined не имеют методов.*/

// console.log(null.a); // null has no properties
// console.log(undefined.a); // undefined has no properties

console.log('--------------------------------------');

/*-------------------------------------------------------------------------------------------------------------*/

console.log('abc'.a); // undefined

let string1 = 'abc';
console.log(string1.a); // undefined

// string1.a = 10;
console.log(string1.a); // undefined

/*Свойство будет добавляться к объекту-обертке, а не к самому примитиву. В нестрогом режиме будет undefined, 
иначе ошибка: can't assign to property "a" on "abc": not an object. Так происходит поскольку строгий режим 
запрещает менять встроенные объекты-обертки. В итоге можно сказать, что примитивы это все-таки не объекты.*/

/*Хотя используя new можно указать свойство примитиву, так как он будет считаться объектом.*/
let string2 = new String('abc');
console.log(typeof string2); // object
string2.a = 10; // Здесь нет объекта-обертки
console.log(string2.a); // 10